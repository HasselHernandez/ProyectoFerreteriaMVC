/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;
import Controlador.ClienteControlador;
import Modelo.Cliente;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;
import org.slf4j.Logger;
/**
 *
 * @author Hassel
 */
public class VistaCliente extends javax.swing.JPanel {
     private final ClienteControlador clienteControlador;
    private Integer idClienteSeleccionado = null;
    /**
     * Creates new form VistaCliente
     */
    public VistaCliente() {
        initComponents();
        this.clienteControlador = new ClienteControlador();
        cargarDatosTabla();
    }

    public void cargarDatosTabla() {
        //Obtener todas las categorias del controlador
        List<Cliente> clientes = clienteControlador.obtenerTodosClientes();
        if (clientes != null) {
            // obtener el modelo existente de la tabla
            DefaultTableModel model = (DefaultTableModel) tablacliente.getModel();
            model.setRowCount(0);
            //llenar las filas con los datos de categorias  
            for (Cliente cli : clientes) {
                Object[] row = {
                    cli.getIdCliente(),
                    cli.getPrimerNombre(),
                    cli.getSegundoNombre(),
                    cli.getPrimerApellido(),
                    cli.getSegundoApellido(),
                    cli.getCelular(),
                    cli.getDireccion(),
                    cli.getCedula() 
                };
                model.addRow(row);
            }
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textPrimerNombre = new javax.swing.JTextField();
        textSegundoNombre = new javax.swing.JTextField();
        textPrimerApellido = new javax.swing.JTextField();
        textSegundoApellido = new javax.swing.JTextField();
        textCelular = new javax.swing.JTextField();
        textDireccion = new javax.swing.JTextField();
        textCedula = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textBuscar = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablacliente = new javax.swing.JTable();
        btnGenerarReporte = new javax.swing.JButton();

        jButton5.setText("jButton2");

        jLabel7.setText("Celular");

        jLabel3.setText("Direccion");

        jLabel1.setText("Segundo apellido");

        jLabel2.setText("Primer apellido");

        jLabel4.setText("Segundo nombre");

        jLabel5.setText("Primer nombre");

        jLabel6.setText("Cedula");

        textPrimerNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPrimerNombreActionPerformed(evt);
            }
        });

        jLabel8.setText("Buscar");

        textBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                buscarClienteKeyTyped(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbtnbtnGuardar(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbtnEliminar(evt);
            }
        });

        btnLimpiar.setText("Limpiar");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbtnActualizar(evt);
            }
        });

        tablacliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id cliente", "Primer Nombre", "Segundo Nombre", "Primer Apellido", "Segundo Apellido", "Celular", "Direccion", "Cedula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablacliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablacliente);
        if (tablacliente.getColumnModel().getColumnCount() > 0) {
            tablacliente.getColumnModel().getColumn(0).setResizable(false);
            tablacliente.getColumnModel().getColumn(1).setResizable(false);
            tablacliente.getColumnModel().getColumn(2).setResizable(false);
            tablacliente.getColumnModel().getColumn(3).setResizable(false);
            tablacliente.getColumnModel().getColumn(4).setResizable(false);
            tablacliente.getColumnModel().getColumn(5).setResizable(false);
            tablacliente.getColumnModel().getColumn(6).setResizable(false);
            tablacliente.getColumnModel().getColumn(7).setResizable(false);
        }

        btnGenerarReporte.setText("Generar Reportes");
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGenerarReporte(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(44, 44, 44))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(textPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(textSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnGenerarReporte)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPrimerNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textSegundoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPrimerApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textSegundoApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textBuscar)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accionbtnbtnGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbtnbtnGuardar
        // TODO add your handling code here:
        String primer_nombre = textPrimerNombre.getText();
        String segundo_nombre = textSegundoNombre.getText();
        String primer_apellido = textPrimerApellido.getText();
        String segundo_apellido = textSegundoApellido.getText();
        String celular =textCelular.getText();
        String direccion = textDireccion.getText();
        String cedula = textCedula.getText();
       
        if (!primer_nombre.isEmpty() && !segundo_nombre.isEmpty() && !primer_apellido.isEmpty()&& !segundo_apellido.isEmpty()
            && ! celular .isEmpty()&& ! direccion .isEmpty()&& ! cedula .isEmpty()) {
            clienteControlador.crearCliente(primer_nombre,segundo_nombre,primer_apellido,segundo_apellido,celular,direccion,cedula);
            cargarDatosTabla();
            textPrimerNombre.setText("");
            textSegundoNombre.setText("");
            textPrimerApellido.setText("");
            textSegundoApellido.setText("");
            textCelular.setText("");
            textDireccion.setText("");
            textCedula.setText("");
        } else {            
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }               
    }//GEN-LAST:event_accionbtnbtnGuardar

    private void accionbtnEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbtnEliminar
        // TODO add your handling code here:
        int filaSelecionada = tablacliente.getSelectedRow();
        if (filaSelecionada != -1) {
            int idCliente = (int) tablacliente.getValueAt(filaSelecionada, 0);
            clienteControlador.eliminarCliente(idCliente);
            cargarDatosTabla();
                    } else {

            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionbtnEliminar

    private void accionbtnActualizar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbtnActualizar
        // TODO add your handling code here:
        String primer_nombre = textPrimerNombre.getText();
        String segundo_nombre = textSegundoNombre.getText();
        String primer_apellido = textPrimerApellido.getText();
        String segundo_apellido = textSegundoApellido.getText();
        String celular =textCelular.getText();
        String direccion = textDireccion.getText();
        String cedula = textCedula.getText();
        if (idClienteSeleccionado != null && !primer_nombre.isEmpty() && !segundo_nombre.isEmpty() && !primer_apellido.isEmpty()&& !segundo_apellido.isEmpty()
            && ! celular .isEmpty()&& ! direccion .isEmpty()&& ! cedula .isEmpty()) {
            clienteControlador.actualizarCliente(idClienteSeleccionado, primer_nombre,segundo_nombre,primer_apellido,segundo_apellido,celular,direccion,cedula);
            cargarDatosTabla();
            
           textPrimerNombre.setText("");
            textSegundoNombre.setText("");
            textPrimerApellido.setText("");
            textSegundoApellido.setText("");
            textCelular.setText("");
            textDireccion.setText("");
            textCedula.setText("");
            idClienteSeleccionado = null;
            
            btnEliminar.setEnabled(true);
            btnGuardar.setEnabled(true);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_accionbtnActualizar

    private void tablaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClienteMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            
            int filaSelecionada = tablacliente.getSelectedRow();
            
            if (filaSelecionada != -1) {
                idClienteSeleccionado = (int) tablacliente.getValueAt(filaSelecionada, 0);
                String primer_nombre = (String) tablacliente.getValueAt(filaSelecionada, 1);
                String segundo_nombre = (String) tablacliente.getValueAt(filaSelecionada, 2);
                String primer_apellido = (String) tablacliente.getValueAt(filaSelecionada, 3);
                String segundo_apellido = (String) tablacliente.getValueAt(filaSelecionada, 4);
                String celular = (String)tablacliente.getValueAt(filaSelecionada, 5);
                String direccion = (String)tablacliente.getValueAt(filaSelecionada, 6);
                String cedula = (String)tablacliente.getValueAt(filaSelecionada, 7);

                
                textPrimerNombre.setText(primer_nombre);
                textSegundoNombre.setText(segundo_nombre);
                textPrimerApellido.setText(primer_apellido);
                textSegundoApellido.setText(segundo_apellido);
                textCelular.setText(celular);
                textDireccion.setText(direccion);
                textCedula.setText(cedula);
                
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaClienteMouseClicked

    private void buscarClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarClienteKeyTyped
        // TODO add your handling code here:
        String textoBusqueda = textBuscar.getText().trim().toLowerCase();
        List<Cliente> clientes = clienteControlador.obtenerTodosClientes();
        
        DefaultTableModel modelo = (DefaultTableModel) tablacliente.getModel();
        modelo.setRowCount(0);
        
        if (clientes != null) {
            for (Cliente cli : clientes) {
                if (textoBusqueda.isEmpty()|| 
                   cli.getPrimerNombre().toLowerCase().contains(textoBusqueda)||
                   cli.getSegundoNombre().toLowerCase().contains(textoBusqueda)||
                   cli.getPrimerApellido().toLowerCase().contains(textoBusqueda)||
                   cli.getSegundoApellido().toLowerCase().contains(textoBusqueda)||
                   cli.getCelular().toLowerCase().contains(textoBusqueda)||
                   cli.getDireccion().toLowerCase().contains(textoBusqueda)||
                   cli.getCedula().toLowerCase().contains(textoBusqueda)){  
                         Object[] fila = {
                        cli.getIdCliente(),
                        cli.getPrimerNombre(),
                        cli.getSegundoNombre(),
                        cli.getPrimerApellido(),
                        cli.getSegundoApellido(),
                        cli.getCelular(),
                        cli.getDireccion(),
                        cli.getCedula()
                    };
                    modelo.addRow(fila);
                }
            }
        }        
    }//GEN-LAST:event_buscarClienteKeyTyped

    private void textPrimerNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPrimerNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPrimerNombreActionPerformed

    private void accionBotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGenerarReporte
        // TODO add your handling code here:
         try {
            FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar Reporte PDF",FileDialog.SAVE);
            dialogoArchivo.setFile("ReportesClientes.pdf");
            dialogoArchivo.setVisible(true);
            
        String ruta = dialogoArchivo.getDirectory();
        String nombreArchivo = dialogoArchivo.getFile();
        
        if (ruta == null ||nombreArchivo == null){
            JOptionPane.showMessageDialog(this, "operacion cancelada", "informacion",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String rutaCompleta = ruta + nombreArchivo;
        
        PdfWriter escritor = new PdfWriter(rutaCompleta);
        PdfDocument pdf= new PdfDocument(escritor);
        Document documento = new Document(pdf);
        
        documento.add(new Paragraph("Reportes de Clientes")
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(20)
        .setBold());
        
        documento.add(new Paragraph("Fecha:" + new java.util.Date().toString())
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(12));
        
        Table tabla = new Table(8);
        tabla.setWidth(UnitValue.createPercentValue(100));
        tabla.addHeaderCell("ID Cliente").setBold();
        tabla.addHeaderCell("primer_nombre").setBold();
        tabla.addHeaderCell("segundo_nombre").setBold();
        tabla.addHeaderCell("primer_apellido").setBold();
        tabla.addHeaderCell("segundo_apellido").setBold();
        tabla.addHeaderCell("celular").setBold();
        tabla.addHeaderCell("direccion").setBold();
        tabla.addHeaderCell("cedula").setBold();
        
        List<Cliente> listaClientes =
        clienteControlador.obtenerTodosClientes();
        if (listaClientes != null){
            for (Cliente cliente : listaClientes){
                tabla.addCell(String.valueOf(cliente.getIdCliente()));
                tabla.addCell(String.valueOf(cliente.getPrimerNombre()));
                tabla.addCell(String.valueOf(cliente.getSegundoNombre()));
                tabla.addCell(String.valueOf(cliente.getPrimerApellido()));
                tabla.addCell(String.valueOf(cliente.getSegundoApellido()));
                tabla.addCell(String.valueOf(cliente.getCelular()));
                tabla.addCell(String.valueOf(cliente.getDireccion()));
                tabla.addCell(String.valueOf(cliente.getCedula()));
            }
        }
        documento.add(tabla);
        
        documento.add(new Paragraph("Notas: Reportes generado automaticamente desde el sistema.")
        .setFontSize(10)
        .setMarginTop(20));
        
        documento.close();
        
        JOptionPane.showMessageDialog(
                    this,
                "Reporte pdf generado con exito en:" + rutaCompleta,
                "Exito", JOptionPane.INFORMATION_MESSAGE);
        
        }catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    this,
                    "Error al Generar el PDF:" + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_accionBotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablacliente;
    private javax.swing.JTextField textBuscar;
    private javax.swing.JTextField textCedula;
    private javax.swing.JTextField textCelular;
    private javax.swing.JTextField textDireccion;
    private javax.swing.JTextField textPrimerApellido;
    private javax.swing.JTextField textPrimerNombre;
    private javax.swing.JTextField textSegundoApellido;
    private javax.swing.JTextField textSegundoNombre;
    // End of variables declaration//GEN-END:variables
}
